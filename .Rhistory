head(iris_mixed)
head(iris_mixed,10)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris_mixed[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData_mixed[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris_mixed[1:150, 5]
iris_test_target <- iris_mixed[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
table(iris_test_target, model1)
model1
iris_train_target
head(iris_mixed)
library(missForest)
library(hydroGOF)
library(mice)
library(VIM)
install.packages("VIM")
library(VIM)
dataset<- (iris.StringsAsFactor=FALSE)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =50, method= 'pmm', seed=500)
summary(imputed)
imputed$imp$Sepal.Width
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
table(iris_test_target, model1)
library(Amelia)
dataset<- (iris)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
rmse2
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
str(completeData2_normal)
summary(completeData2_normal)
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
table(iris_test_target2, model1)
model2
library(mi)
dataset<- iris
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
imputedSet <- missForest(iris.mis)
completeData3<- imputedSet$ximp
rmse3<- rmse(completeData3[,-5], iris[,-5], na.rm = TRUE)
rmse3
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData3_normal<- as.data.frame(lapply(completeData3[,c(1,2,3,4)], normalize))
str(completeData3_normal)
summary(completeData3_normal)
iris_train3 <- iris_normal[1:150,]
iris_test3 <- completeData3_normal[1:150,]
iris_train_target3 <- iris[1:150, 5]
iris_test_target3 <- iris[1:150, 5]
require(class)
model3<- knn(train=iris_train3, test= iris_test3, cl=iris_train_target3, k=13)
table(iris_test_target3, model1)
model3
dataset<- (iris.StringsAsFactor=FALSE)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =50, method= 'pmm', seed=500)
summary(imputed)
imputed$imp$Sepal.Width
completeData<- complete(imputed,1)
library(missForest)
library(hydroGOF)
library(mice)
library(VIM)
completeData<- complete(imputed,1)
install.packages("missForest")
install.packages("hydroGOF")
install.packages("missForest")
install.packages("missForest")
install.packages("hydroGOF")
install.packages("hydroGOF")
install.packages("mice")
install.packages("mice")
install.packages("VIM")
install.packages("VIM")
library(missForest)
library(hydroGOF)
library(mice)
library(VIM)
completeData<- complete(imputed,1)
library(missForest)
library(hydroGOF)
library(mice)
library(VIM)
dataset<- (iris.StringsAsFactor=FALSE)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =50, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
fit <- with(data = iris.mis, exp = lm(Sepal.Width ~ Sepal.Length + Petal.Width))
combine <- pool(fit)
summary(combine)
combine <- pool(fit, method = pmm)
library(mice)
combine <- pool(fit)
pool(fit)
combine<- as.mira.pool(fit)
combine<- as.mira(pool(fit))
library(missForest)
library(hydroGOF)
library(mice)
library(VIM)
dataset<- (iris.StringsAsFactor=FALSE)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.02)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
summary(iris)
iris.mis<- prodNA(iris, noNA =0.05)
summary(iris.mis)
md.pattern(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
dataset<- (iris.StringsAsFactor=FALSE)
iris.mis<- prodNA(iris, noNA =0.15)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
dataset<- (iris.StringsAsFactor=FALSE)
iris.mis<- prodNA(iris, noNA =0.2)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
dataset<- (iris.StringsAsFactor=FALSE)
iris.mis<- prodNA(iris, noNA =0.25)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
rmse1<- rmse(completeData[,-5], iris[,-5], na.rm = TRUE)
rmse1
dataset<- (iris.StringsAsFactor=FALSE)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.02)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
table(iris_test_target, model1)
xtable(iris_test_target, model1)
install.packages("xtable")
library(xtable)
xtable(iris_test_target, model1)
table(iris_test_target, model1)
tab<- table(iris_test_target, model1)
xtable(tab)
dataset<- (iris.StringsAsFactor=FALSE)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.05)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
tab<- table(iris_test_target, model1)
xtable(tab)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
tab<- table(iris_test_target, model1)
xtable(tab)
iris.mis<- prodNA(iris, noNA =0.15)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
tab<- table(iris_test_target, model1)
xtable(tab)
iris.mis<- prodNA(iris, noNA =0.2)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
tab<- table(iris_test_target, model1)
xtable(tab)
iris.mis<- prodNA(iris, noNA =0.25)
summary(iris.mis)
imputed<- mice(iris.mis, m=5, maxit =10, method= 'pmm', seed=500)
summary(imputed)
completeData<- complete(imputed,1)
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData_normal<- as.data.frame(lapply(completeData[,c(1,2,3,4)], normalize))
str(completeData_normal)
summary(completeData_normal)
iris_train <- iris_normal[1:150,]
iris_test <- completeData_normal[1:150,]
iris_train_target <- iris[1:150, 5]
iris_test_target <- iris[1:150, 5]
require(class)
model1<- knn(train=iris_train, test= iris_test, cl=iris_train_target, k=13)
tab<- table(iris_test_target, model1)
xtable(tab)
library(mice)
library(missForest)
library(VIM)
library(Amelia)
dataset<- (iris)
summary(iris)
iris.mis<- prodNA(iris, noNA =0.1)
iris.mis<- prodNA(iris, noNA =0.02)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
rmse2
iris.mis<- prodNA(iris, noNA =0.05)
summary(iris.mis)
md.pattern(iris.mis)
mice_plot <- aggr(iris.mis, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(iris.mis), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
amelia$imputations[[1]]$Sepal.Length
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
rmse2
iris.mis<- prodNA(iris, noNA =0.1)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
rmse2
iris.mis<- prodNA(iris, noNA =0.15)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
xtable(rmse2)
rmse2
iris.mis<- prodNA(iris, noNA =0.2)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
rmse2
iris.mis<- prodNA(iris, noNA =0.25)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
rmse2<- rmse(completeData2[,-5], iris[,-5], na.rm = TRUE)
rmse2
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
str(completeData2_normal)
summary(completeData2_normal)
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
tab2<- table(iris_test_target2, model2)
xtable(tab2)
iris.mis<- prodNA(iris, noNA =0.2)
summary(iris.mis)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
str(completeData2_normal)
summary(completeData2_normal)
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
tab2<- table(iris_test_target2, model2)
xtable(tab2)
iris.mis<- prodNA(iris, noNA =0.15)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
str(completeData2_normal)
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
tab2<- table(iris_test_target2, model2)
xtable(tab2)
iris.mis<- prodNA(iris, noNA =0.1)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
str(completeData2_normal)
summary(completeData2_normal)
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
tab2<- table(iris_test_target2, model2)
xtable(tab2)
iris.mis<- prodNA(iris, noNA =0.05)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
completeData2<- amelia$imputations[[1]]
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
str(iris_normal)
summary(iris_normal)
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
str(completeData2_normal)
summary(completeData2_normal)
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
tab2<- table(iris_test_target2, model2)
xtable(tab2)
iris.mis<- prodNA(iris, noNA =0.02)
amelia <- amelia(iris.mis, m=1, parallel = "multicore", noms = "Species")
normalize<- function(x) {
return((x-min(x)) / (max(x)- min(x)))
}
iris_normal<- as.data.frame(lapply(iris[,c(1,2,3,4)], normalize))
completeData2_normal<- as.data.frame(lapply(completeData2[,c(1,2,3,4)], normalize))
iris_train2 <- iris_normal[1:150,]
iris_test2 <- completeData2_normal[1:150,]
iris_train_target2 <- iris[1:150, 5]
iris_test_target2 <- iris[1:150, 5]
require(class)
model2<- knn(train=iris_train2, test= iris_test2, cl=iris_train_target2, k=13)
tab2<- table(iris_test_target2, model2)
xtable(tab2)
shiny::runApp('E:/R/Project/productSalesAnalysis')
